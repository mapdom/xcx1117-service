<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shop.dao.InstructMapper" >
  <resultMap id="BaseResultMap" type="shop.domain.Instruct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="p_desc" property="pDesc" jdbcType="VARCHAR" />
    <result column="modbus_addr" property="modbusAddr" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="fromId" property="fromid" jdbcType="VARCHAR" />
    <result column="op_status" property="opStatus" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, p_desc, modbus_addr, status, token, fromId, op_status, created
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from instruct
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from instruct
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="shop.domain.Instruct" >
    insert into instruct (id, p_desc, modbus_addr, 
      status, token, fromId, 
      op_status, created)
    values (#{id,jdbcType=INTEGER}, #{pDesc,jdbcType=VARCHAR}, #{modbusAddr,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{fromid,jdbcType=VARCHAR}, 
      #{opStatus,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="shop.domain.Instruct" >
    insert into instruct
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pDesc != null" >
        p_desc,
      </if>
      <if test="modbusAddr != null" >
        modbus_addr,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="fromid != null" >
        fromId,
      </if>
      <if test="opStatus != null" >
        op_status,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pDesc != null" >
        #{pDesc,jdbcType=VARCHAR},
      </if>
      <if test="modbusAddr != null" >
        #{modbusAddr,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="fromid != null" >
        #{fromid,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null" >
        #{opStatus,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="shop.domain.Instruct" >
    update instruct
    <set >
      <if test="pDesc != null" >
        p_desc = #{pDesc,jdbcType=VARCHAR},
      </if>
      <if test="modbusAddr != null" >
        modbus_addr = #{modbusAddr,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="fromid != null" >
        fromId = #{fromid,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null" >
        op_status = #{opStatus,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="shop.domain.Instruct" >
    update instruct
    set p_desc = #{pDesc,jdbcType=VARCHAR},
      modbus_addr = #{modbusAddr,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      fromId = #{fromid,jdbcType=VARCHAR},
      op_status = #{opStatus,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>